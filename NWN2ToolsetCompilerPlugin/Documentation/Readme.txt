The Advanced Script Compiler for the NWN2 Toolset is a toolset plugin that
improves the toolset's script compiler.  Better code is generated by the new
compiler, and more useful diagnostics (compile warnings/compile errors) are
returned.

Once installed, the Advanced Script Compiler seamlessly integrates with the
normal script editor and compiler in the toolset.  Simply compile scripts as
normal.

The improved compiler is based on Edward T. Smith (Torlack)'s nwnnsscomp, with
numerous bugfixes and improvements.

Installation instructions:

(1) Quit the toolset, if it is active.
(2) Copy the contents of the ToolsetPlugin directory to the toolset Plugins
    directory.  This directory is found in the "NWN2Toolset" directory of your
    game installation directory.  For example, if the game is installed in
    "C:\Program Files (x86)\Atari\Neverwinter Nights 2", copy the files to the
    "C:\Program Files (x86)\Atari\Neverwinter Nights 2\NWN2Toolset\Plugins"
    directory.  Once you're done, you should have the compiler plugin files in
    the toolset Plugins directory directly (don't place them in a
    subdirectory).
(3) Launch the toolset and enable plugin loading (if you have not done so).  To
    do this, open the View > Options menu item in the toolset main menu bar,
    click on General, change the "Security > AllowPlugins" option to read
    "Load all plugins".  The default is to only load Obsidian provided plugins.
(4) Restart the toolset.

If the installation was successful, the Plugins menu in the toolset should now
contain an "Advanced Script Compiler" menu item.

Once installed, simply compile scripts as normal and the Advanced Script
Compiler will automatically be used.

Non-standard extensions
=======================

The Advanced Script Compiler has optional support for non-standard extension
features in scripts.  Scripts using these features can only be compiled with
the Advanced Script Compiler, and not the standard toolset compiler.

Non-standard extensions include limited #if/#ifdef support, the ability to
generate warnings or errors with the #warning or #error directive, #define
support, and the ability to declare a function defaulted by the compiler if
no user supplied implementation was provided (useful for extensibility), via
#pragma default_function(FunctionName), and greatly increased internal limits
on the number of identifiers and constants permissible in a script.  In
addition, nested structs are permitted.  A full list of extensions can be found
in the standalone compiler's changelog/readme included in this zip.

By default, non-standard extensions are only enabled for scripts that are not
GUI or StartingConditional scripts.  These scripts can only use non-standard
extensions in multiplayer, when NWNX4 is in use and the NWScript Accelerator
NWNX4 plugin is in use.  For more information, see the following thread on
the NWNX4 forums:

http://www.nwnx.org/phpBB2/viewtopic.php?t=1803

To enable non-standard extensions for GUI and StartingConditional scripts,
use the Advanced Script Compiler menu item to configure the compiler
settings.  These settings are saved in a compilersettings.gff file in the
module, so every computer loading the module will use the same settings.

You can place the compilersettings.gff file in a HAK if desired (e.g. if you
have multiple modules in your project).
