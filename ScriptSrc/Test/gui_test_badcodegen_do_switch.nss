/*++

Copyright (c) Ken Johnson (Skywing). All rights reserved.

Module Name:

	gui_test_badcodegen_do_switch.nss

Abstract:

	This module houses test code for a code generation issue in the
	the OEI/Bioware script compiler.

--*/

void
testfunc1(
	)
/*++

Routine Description:

	This routine emits a do/while construct with a switch statement embedded in
	the do/while body.

Arguments:

	None.

Return Value:

	None.

Environment:

	Any script caller.

--*/
{
	do
	{
		//
		// A switch statement inside of a do/while construct causes the stack
		// pointer to be left in an inconsistent state with respect to the code
		// emitted to handle the switch case statements when the OEI/Bioware
		// script compiler is used.
		//
		// A switch statement with no case/default blocks generates correct code,
		// and other control flow constructs other than do/while generate correct
		// code.
		//
		// The NWScript analyzer detects this condition with the following error:
		//
		// NWScriptGenerateCode: Exception 'mismatched stack on control flow at
		// PC=00000010 (SP=FFFFFFFC, FlowSP=00000000)' generating code for script
		// 'gui_test_badcodegen_do_switch'.
		//
		// Because IR raising fails, the JIT system cannot generate MSIL for a
		// script with this construct and can be used as an easy test for the
		// existance of the problem.
		//
		// When executed in the NWScript VM, local variables become corrupted and
		// program operation is erratic until a type safety violation ultimately
		// forces the VM to terminate the program.
		//
		// The underlying problem relates to code being emitted to seemingly
		// remove the condition for the switch statement multiple times.
		//
		// Assembly for this script, as generated by the OEI/Bioware compiler,
		// illustrates the issue:
		//
		// 00000008 42 0000004F              T 0000004F
		// 0000000D 1E 00 00000008           JSR fn_00000015
		// 00000013 20 00                    RETN
		// 00000015 1E 00 00000008           JSR fn_0000001D
		// 0000001B 20 00                    RETN
		// 0000001D 04 03 00000000           CONSTI 00000000
		// 00000023 1D 00 00000006           JMP off_00000029
		// 00000029 1B 00 FFFFFFFC           MOVSP FFFFFFFC
		// 0000002F 1D 00 00000006           JMP off_00000035
		// 00000035 1B 00 FFFFFFFC           MOVSP FFFFFFFC
		// 0000003B 04 03 00000001           CONSTI 00000001
		// 00000041 1F 00 0000000C           JZ off_0000004D
		// 00000047 1D 00 FFFFFFD6           JMP off_0000001D
		// 0000004D 20 00                    RETN
		//
		// Note that at 00000029, the condition variable temporary for the
		// switch comparison block is removed from the stack.  Then, at 00000035,
		// the stack is incorrectly offset again (likely due to a second attempt
		// to remove the condition variable tmeporary).
		//

		switch (0)
		{
			default:
			break;
		}
	}
	while (1);
}

void
main(
	)
/*++

Routine Description:

	This script is invoked to test bad code generation.

Arguments:

	None.

Return Value:

	None.

Environment:

	GUI script.

--*/
{
	testfunc1( );
}

